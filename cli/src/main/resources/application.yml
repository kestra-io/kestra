micronaut:
  application:
    name: kestra
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      ui:
        paths: classpath:ui
        mapping: /ui/**
  server:
    max-request-size: 10GB
    multipart:
      max-file-size: 10GB
      disk: true
    read-idle-timeout: 60m
    write-idle-timeout: 60m
    idle-timeout: 60m
    netty:
      max-chunk-size: 10MB

jackson:
  serialization:
    writeDatesAsTimestamps: false

endpoints:
  all:
    port: 8081
    enabled: true
    sensitive: false
  health:
    details-visible: ANONYMOUS
  loggers:
    write-sensitive: false

kestra:
  kafka:
    defaults:
      topic-prefix: "kestra_"
      topic:
        partitions: 16
        replication-factor: 1

      consumer:
        properties:
          isolation.level: "read_committed"
          auto.offset.reset: "earliest"
          enable.auto.commit: "false"

      producer:
        properties:
          acks: "all"
          compression.type: "lz4"
          max.request.size: "10485760"

      stream:
        properties:
          processing.guarantee: "exactly_once"
          replication.factor: "${kestra.kafka.defaults.topic.replication-factor}"
          acks: "all"
          compression.type: "lz4"
          max.request.size: "10485760"

    topics:
      execution:
        name: "${kestra.kafka.defaults.topic-prefix}execution"
        cls: org.kestra.core.models.executions.Execution
        properties:
          cleanup.policy: "compact"
          retention.ms: "-1"

      flow:
        name: "${kestra.kafka.defaults.topic-prefix}flow"
        cls: org.kestra.core.models.flows.Flow
        properties:
          cleanup.policy: "compact"
          retention.ms: "-1"
          segment.bytes: "10485760"

      flowlast:
        name: "${kestra.kafka.defaults.topic-prefix}flow_last"
        properties:
          cleanup.policy: "compact"
          retention.ms: "-1"
          segment.bytes: "10485760"

      template:
        name: "${kestra.kafka.defaults.topic-prefix}template"
        cls: org.kestra.core.models.templates.Template
        properties:
          cleanup.policy: "compact"
          retention.ms: "-1"
          segment.bytes: "10485760"

      executor:
        name: "${kestra.kafka.defaults.topic-prefix}executor"
        properties:
          cleanup.policy: "delete,compact"

      killed:
        name: "${kestra.kafka.defaults.topic-prefix}executor_killed"
        cls: org.kestra.core.models.executions.ExecutionKilled
        properties:
          cleanup.policy: "delete,compact"

      workertask:
        name: "${kestra.kafka.defaults.topic-prefix}workertask"
        cls: org.kestra.core.runners.WorkerTask
        partitions: 64
        properties:
          cleanup.policy: "delete,compact"

      workertaskresult:
        name: "${kestra.kafka.defaults.topic-prefix}workertaskresult"
        cls: org.kestra.core.runners.WorkerTaskResult
        properties:
          cleanup.policy: "delete,compact"

      workerinstance:
        cls: org.kestra.core.runners.WorkerInstance
        name: "${kestra.kafka.defaults.topic-prefix}workerinstance"
        properties:
          cleanup.policy: "compact"

      executorworkerinstance:
        name: "${kestra.kafka.defaults.topic-prefix}executor_workerinstance"
        properties:
          cleanup.policy: "compact"

      workertaskrunning:
        cls: org.kestra.core.runners.WorkerTaskRunning
        name: "${kestra.kafka.defaults.topic-prefix}workertaskrunning"
        properties:
          cleanup.policy: "delete,compact"

      logentry:
        cls: org.kestra.core.models.executions.LogEntry
        name: "${kestra.kafka.defaults.topic-prefix}logs"

      trigger:
        cls: org.kestra.core.models.triggers.Trigger
        name: "${kestra.kafka.defaults.topic-prefix}trigger"
        properties:
          cleanup.policy: "compact"

  elasticsearch:
    defaults:
      indice-prefix: "kestra_"
    indices:
      flows:
        index: "${kestra.elasticsearch.defaults.indice-prefix}flows"
        cls: org.kestra.core.models.flows.Flow
        mapping-file: flow
      flows-revisions:
        index: "${kestra.elasticsearch.defaults.indice-prefix}flows_revisions"
        cls: org.kestra.core.models.flows.Flow
        mapping-file: flow
      executions:
        index: "${kestra.elasticsearch.defaults.indice-prefix}executions"
        cls: org.kestra.core.models.executions.Execution
        mapping-file: execution
      templates:
        index: "${kestra.elasticsearch.defaults.indice-prefix}templates"
        cls: org.kestra.core.models.templates.Template
        mapping-file: template
      triggers:
        index: "${kestra.elasticsearch.defaults.indice-prefix}triggers"
        cls: org.kestra.core.models.triggers.Trigger
        mapping-file: trigger
      logs:
        index: "${kestra.elasticsearch.defaults.indice-prefix}logs"
        cls: org.kestra.core.models.executions.LogEntry
        mapping-file: log

  indexer:
    models:
      - org.kestra.core.models.executions.Execution
      - org.kestra.core.models.triggers.Trigger
      - org.kestra.core.models.executions.LogEntry

  plugins:
    repositories:
      central:
        url: https://repo.maven.apache.org/maven2/
      jcenter:
        url: https://jcenter.bintray.com/
      kestra:
        url: https://dl.bintray.com/kestra/maven

  variables:
    env-vars-prefix: KESTRA_
    globals: {}

  metrics:
    prefix: kestra

  server:
    access-log:
      enabled: true
      name: org.kestra.webserver.access
      format: "[Date: {}] [Duration: {} ms] [Method: {}] [Url: {}] [Status: {}] [Length: {}] [Ip: {}] [Port: {}]"
      filters:
        - ".*\\[Url: /api/.*"
