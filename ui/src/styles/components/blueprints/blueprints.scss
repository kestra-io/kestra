@import "../../variable";

.header {
    $neg-offset-from-menu: calc(-1 * var(--offset-from-menu));
    // left and right margins override the default main-content margin
    // top margin overrides the default main-content margin (1 spacer) + the existing top navbar (2 + 2 + 2 spacers)
    margin: calc(-7 * var(--spacer)) $neg-offset-from-menu 0 $neg-offset-from-menu;
    background: linear-gradient(140deg, #9535D0 3.03%, #6A22BB 5.45%, #461A97 11.72%, #36188D 21.59%, #321974 35.13%, #25185C 46.92%, #24155B 63.48%, #25155B 75.13%, #450F95 90.68%, #4F39B3 94.9%, #893FE5 97.9%);
    text-align: center;
    padding-top: calc(7 * var(--spacer));
    padding-bottom: calc(3 * var(--spacer));

    .welcome {
        color: $pink;
        font-family: $font-family-monospace;
        font-weight: bold;
    }

    .catch-phrase {
        color: $white;
    }
}


.main-container {
    padding-top: 6px !important;

    :deep(.hoverable) {
        &.el-checkbox-button:not(.is-checked) span, &.el-card, & button.hoverable {
            color: $black !important;
            background-color: $white;

            &:hover {
                background-color: var(--bs-gray-300);
            }

            html.dark & {
                color: $white !important;
                background-color: rgba(255, 255, 255, 0.1);

                &:hover {
                    background-color: rgba(255, 255, 255, 0.15)
                }
            }
        }

        & button.hoverable:hover {
            color: $white !important;
            background-color: $tertiary
        }


        &.el-checkbox-button.is-checked span {
            color: $white !important;
            background-color: $primary;

            html.dark & {
                background-color: $primary;
            }
        }
    }

    .sub-nav {
        margin: 0 0 $spacer;

        > * {
            margin: 0;
        }

        // Two elements => one element on each side
        &:has(> :nth-child(2)) {
            margin: $spacer 0 calc(0.5 * var(--spacer)) 0;

            .el-card & {
                // Enough space not to overlap with switch view when embedded
                margin-top: calc(1.6 * var(--spacer));


                // Embedded tabs looks weird without cancelling the margin (this brings a top-left tabs with bottom-right search)
                > :nth-child(1){
                    margin-top: calc(-1.5 * var(--spacer));
                }
            }

            > :nth-last-child(1) {
                margin-left: auto;
                padding: calc(0.5 * var(--spacer)) 0;
            }
        }
    }

    .blueprints {
        width: 100%;

        .blueprint-card {
            cursor: pointer;
            margin: calc(var(--spacer) / 16) 0;
            border-radius: 0;

            &:first-child {
                border-top-left-radius: $border-radius;
                border-top-right-radius: $border-radius;
            }

            &:nth-last-child(1 of .blueprint-card) {
                border-bottom-left-radius: $border-radius;
                border-bottom-right-radius: $border-radius;
            }

            > :deep(.el-card__body) {
                display: flex;
            }

            .side {
                margin: auto 0;

                &:first-child {
                    overflow: hidden;

                    & > * {
                        overflow: hidden;
                        text-overflow: ellipsis;
                    }
                }

                &.buttons {
                    white-space: nowrap;
                }

                .title {
                    font-weight: bold;
                    font-size: $small-font-size;
                }

                .tags {
                    font-family: $font-family-monospace;
                    font-weight: bold;
                    font-size: $sub-sup-font-size;
                    margin-bottom: calc(var(--spacer) / 2);
                    color: $primary;

                    html.dark & {
                        color: $pink;
                    }
                }

                .tasks-container {
                    $plugin-icon-size: calc(var(--font-size-base) + 0.4rem);

                    display: flex;
                    flex-wrap: wrap;
                    flex-direction: column;
                    gap: calc(var(--spacer) / 4);
                    width: fit-content;
                    height: $plugin-icon-size;

                    :deep(> *) {
                        width: $plugin-icon-size;
                        padding: 0.2rem;
                        border-radius: $border-radius;

                        html.dark & {
                            background-color: var(--bs-gray-900);
                        }

                        & * {
                            margin-top: 0;
                        }
                    }
                }
            }
        }
    }

    .tags-selection {
        display: flex;
        width: 100%;
        margin-bottom: calc(2 * var(--spacer));
        gap: $spacer;
        flex-wrap: wrap;

        & > * {
            max-width: 50%;
            flex: 1;

            :deep(span) {
                border: 1px solid var(--bs--gray-300);
                border-radius: $border-radius;
                width: 100%;
                font-weight: bold;
                box-shadow: none;
                text-overflow: ellipsis;
                overflow: hidden;
            }
        }
    }
}