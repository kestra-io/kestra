# volumes:
#   postgres-data:
#     driver: local
#   kestra-data:
#     driver: local

# services:
#   postgres:
#     image: postgres
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_DB: kestra
#       POSTGRES_USER: kestra
#       POSTGRES_PASSWORD: k3str4
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
#       interval: 30s
#       timeout: 10s
#       retries: 10

#   kestra:
#     image: kestra/kestra:latest
#     pull_policy: always
#     # Note that this setup with a root user is intended for development purpose.
#     # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
#     # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
#     user: "root"
#     command: server standalone
#     volumes:
#       - kestra-data:/app/storage
#       - /var/run/docker.sock:/var/run/docker.sock
#       - /tmp/kestra-wd:/tmp/kestra-wd
#     environment:
#       KESTRA_CONFIGURATION: |
#         datasources:
#           postgres:
#             url: jdbc:postgresql://postgres:5432/kestra
#             driverClassName: org.postgresql.Driver
#             username: kestra
#             password: k3str4
#         kestra:
#           server:
#             basic-auth:
#               enabled: false
#               username: "admin@kestra.io" # it must be a valid email address
#               password: kestra
#           repository:
#             type: postgres
#           storage:
#             type: local
#             local:
#               base-path: "/app/storage"
#           queue:
#             type: postgres
#           tasks:
#             tmp-dir:
#               path: /tmp/kestra-wd/tmp
#           url: http://localhost:8080/
#     ports:
#       - "8080:8080"
#       - "8081:8081"
#     depends_on:
#       postgres:
#         condition: service_started


volumes:
  kestra-data:
    driver: local

services:
  kestra:
    image: kestra/kestra:develop
    pull_policy: always
    entrypoint: /bin/bash
    # Note that this is meant for development only. Refer to the documentation for production deployments of Kestra which runs without a root user.
    user: "root"
    command:
      - -c
      - /app/kestra server standalone --worker-thread=128
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        micronaut: 
          server:
            cors:
              enabled: true
              configurations:
                all:
                  allowedOrigins:
                    - http://localhost:5173
        datasources:
          h2:
            url: jdbc:h2:mem:public;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
            username: sa
            password: ""
            driverClassName: org.h2.Driver
        kestra:
          server:
            basic-auth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          queue:
            type: h2
          repository:
            type: h2
          storage:
            type: local
            local:
              base-path: "/app/storage"
          tasks:
            tmp-dir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8085:8080"
      - "8086:8081"